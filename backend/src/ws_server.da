from websocket_server import WebsocketServer
import json

from main import query_prerequisite_graph
from file_utils import get_config
from query import Query

config = get_config()
host, port = config["ws_host"], config["ws_port"]
assert host and port, "Failed to load host and port from config.json!"


# Called for every client connecting (after handshake)
def client_connect(client, server):
    print("New client connected and was given id %d" % client['id'])


# Called for every client disconnecting
def client_disconnect(client, server):
    print("Client(%d) disconnected" % client['id'])


# Called when a client sends a message
def message_received(client, server, message):
    # parses the message into a dictionary
    msg_dict = json.loads(message)

    # checks the type of message
    if msg_dict.get("type") == "query":

        # queries the graph and sends the response back to the client
        response = query_prerequisite_graph(**msg_dict["data"])
        server.send_message(client, json.dumps(
            {"type": "graph", "data": response}))

    else:
        print(f"Received unknown message type: {msg_dict.get('type')}")
        print(msg_dict)


server = WebsocketServer(host=host, port=port)
print(f"Server running at ws://{host}:{port}")

server.set_fn_new_client(client_connect)
server.set_fn_client_left(client_disconnect)
server.set_fn_message_received(message_received)

server.run_forever()  # run forever
